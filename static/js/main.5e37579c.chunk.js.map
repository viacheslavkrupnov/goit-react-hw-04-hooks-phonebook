{"version":3,"sources":["components/Filter/Filter.module.css","components/Section/Section.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","components/Container/Container.js","components/Section/Section.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactsList/ContactsList.module.css"],"names":["module","exports","ContactForm","handelAddContact","isExistContact","useState","name","setName","number","setNumber","handleInputForm","event","target","value","toast","error","resetForm","className","s","form","onSubmit","preventDefault","validateForm","trim","id","uuidv4","input","type","pattern","title","placeholder","onChange","button","ContactsList","contacts","onRemove","length","list","map","onClick","protoTypes","PropTypes","arrayOf","shape","string","isRequired","func","Filter","filter","label","Container","children","container","Section","section","initialContacts","App","JSON","parse","window","localStorage","getItem","setContacts","useEffect","setItem","stringify","setFilter","visibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","newContact","some","contact","contactId","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e37579c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"filter\":\"Filter_filter__1E5tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cotainer\":\"Container_cotainer__1k7pl\"};","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport s from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\n\nfunction ContactForm({ handelAddContact, isExistContact }) {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n  \n    const handleInputForm = event => {\n      const { name, value } = event.target;\n  \n      switch (name) {\n        case 'name':\n          setName(value);\n          break;\n  \n        case 'number':\n          setNumber(value);\n          break;\n  \n        default:\n          toast.error(`There are no type input \"${name}\"`);\n      }\n    };\n  \n    const handleFormSubmit = event => {\n      event.preventDefault();\n      // const validateForm = () => {\n      //   if (!name || !number) {\n      //     alert('Some filed is empty');\n      //     return;\n      //   }\n      const validateForm = name.trim();\n      if (isExistContact(name)) {\n        return toast.error(`${validateForm} Contact already exists`);\n      }\n    //   console.log(validateForm);\n  \n      if (!validateForm) {\n        return toast.error('Please enter contact name');\n      }\n      handelAddContact({ name: validateForm, number, id: uuidv4() });\n      resetForm();\n    };\n  \n    const resetForm = () => {\n      setName('');\n      setNumber('');\n    };\n  \n    return (\n      <form className={s.form} onSubmit={handleFormSubmit}>\n        <label>\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={handleInputForm}\n          />\n        </label>\n        <label>\n          <input\n            className={s.input}\n            type=\"tell\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            placeholder=\"Enter phone number\"\n            value={number}\n            onChange={handleInputForm}\n          />\n        </label>\n  \n        <button className={s.button} type=\"submit\">\n          {' '}\n          Add Contact{' '}\n        </button>\n      </form>\n    );\n  }\n  \n  ContactForm.propTypes = {\n    isExistContact: PropTypes.func.isRequired,\n    handelAddContact: PropTypes.func.isRequired,\n  };\n  \n  export default ContactForm;","import PropTypes from 'prop-types';\nimport s from './ContactsList.module.css';\n\nconst ContactsList = ({ contacts, onRemove }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <div className={s.contacts}>\n      <ul className={s.list}>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id}>\n            <p>\n              {name}: {number}\n            </p>\n            <button\n              className={s.button}\n              type=\"button\"\n              onClick={() => onRemove(id)}\n            >\n              delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nContactsList.protoTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={({ target }) => onChange(target.value)}\n        placeholder=\"Enter name for Search\"\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;","import propTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: propTypes.node.isRequired,\n};\n\nexport default Container;","import PropTypes from 'prop-types';\n\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;","import { useState, useEffect } from 'react';\n\nimport { ToastContainer } from 'react-toastify';\n\nimport ContactForm from './components/ContactForm';\nimport ContactsList from './components/ContactsList';\nimport Filter from './components/Filter';\nimport Container from './components/Container';\nimport Section from './components/Section';\n\nconst initialContacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nfunction App() {\n  const [contacts, setContacts] = useState(() => {\n    return (\n      JSON.parse(window.localStorage.getItem('contacts')) ?? [\n        ...initialContacts,\n      ]\n    );\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const [filter, setFilter] = useState('');\n\n  const handelAddContact = newContact => {\n    setContacts([...contacts, newContact]);\n  };\n\n  const isExistContact = name => {\n    return contacts.some(contact => contact.name === name);\n  };\n\n  const handleDeleteContact = contactId => {\n    setContacts(contacts.filter(({ id }) => id !== contactId));\n  };\n\n  const handleFilterChange = filter => {\n    setFilter(filter);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n  return (\n    <Container>\n      <Section title=\"Phonebook\">\n        <ContactForm\n          handelAddContact={handelAddContact}\n          isExistContact={isExistContact}\n        />\n      </Section>\n      <Section title=\"Contacts\">\n        {contacts.length > 1 && (\n          <Filter filter={filter} onChange={handleFilterChange} />\n        )}\n        {contacts.length > 0 ? (\n          <ContactsList\n            contacts={visibleContacts}\n            onRemove={handleDeleteContact}\n          />\n        ) : (\n          <p>Your phonebook is empty. Please add contact</p>\n        )}\n        <ToastContainer autoClose={3000} />\n      </Section>\n    </Container>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__1MLZK\",\"form\":\"ContactForm_form__1fuOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2RiYd\",\"contacts\":\"ContactsList_contacts__1CdsV\",\"button\":\"ContactsList_button__2RjNg\"};"],"sourceRoot":""}